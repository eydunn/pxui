{"version":3,"sources":["img/logo.svg","components/Layouts/Header.jsx","components/DbSelector/DbSelector.jsx","components/Select/SelectorMulti.jsx","components/Loading/Loading.jsx","components/Select/Selectors.jsx","components/ListMenu/ListMenu.jsx","components/TablesData/TablesData.jsx","components/Layouts/MainBody.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Header","react_default","a","createElement","Grid","container","spacing","item","xs","href","src","Logo","style","height","alignIem","alt","onClick","window","location","animatedComponents","makeAnimated","DbSelector","props","react_select_browser_esm","className","classNamePrefix","onChange","e","closeMenuOnSelect","components","defaultValue","statBanks","options","SelectorMulti","_useState","useState","Object","slicedToArray","_useState3","code","_useState5","text","_useState7","elimination","customStyles","option","provided","state","_objectSpread","borderBottom","color","isSelected","styles","variables","callBack","handleChange","isMulti","Loading","_ref","type","width","display","alignItems","justifyContent","react_loading_default","selectorArray","query","Selectors","_useState2","postData","setPostData","_useState4","isLoading","setIsLoading","values","i","length","push","value","obj","selection","filter","findIndex","o","fetchPostHttp","response","px","_x","_fetchPostHttp","apply","this","arguments","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","fetch","url","body","JSON","stringify","method","then","ok","console","log","Error","catch","err","stop","useEffect","json","data","table","selectorName","title","selectorCounter","timeBoolean","time","y","label","valueTexts","reverse","aa","components_Loading_Loading","ListMenu","setData","fetchData","_fetchData","_callee2","_context2","sent","abrupt","fetchDataTree","menuArray","key","t0","keys","t1","done","id","nodes","_x2","_getDataTree","_callee3","statBankUrl","yourDataTree","_context3","statBank","_x3","getDataTree","react","main_default","onClickItem","tmpId","tmpUrl","TablesData","useStyles","makeStyles","theme","root","flexGrow","paper","padding","textAlign","palette","primary","MainBody","setUrl","_useState6","setStatBankUrl","classes","marginBottom","sm","Paper","Typography","component","components_ListMenu_ListMenu","Select_Selectors","App","Boolean","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.34aff3ea.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.565f9a19.svg\";","import React from \"react\";\nimport Logo from \"../../img/logo.svg\";\nimport Grid from \"@material-ui/core/Grid\";\n\nexport default function Header() {\n  const redirectToUrl = () => {\n    window.location.href = \"https://www.google.com\";\n  };\n\n  return (\n    <div>\n      <Grid container spacing={3}>\n        <Grid item xs={12}>\n          <a href=\"http://www.hagstova.fo\">\n            <img\n              src={Logo}\n              style={{ height: \"3em\", alignIem: \"left\" }}\n              alt=\"Hagstovan\"\n              onClick={redirectToUrl}\n            />\n          </a>\n          <hr />\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport Select from \"react-select\";\nimport makeAnimated from \"react-select/animated\";\nimport \"font-awesome/css/font-awesome.min.css\";\n\nimport statBanks from \"../../json/statBanks\";\nconst animatedComponents = makeAnimated();\n\nexport default function DbSelector(props) {\n  const handleChange = e => {\n    props.onChange(e);\n  };\n\n  return (\n    <Select\n      className=\"basic-single\"\n      classNamePrefix=\"select\"\n      onChange={handleChange}\n      closeMenuOnSelect={true}\n      components={animatedComponents}\n      defaultValue={[statBanks[0]]}\n      options={statBanks}\n    />\n  );\n}\n","import React, { useState } from \"react\";\nimport Select from \"react-select\";\nimport makeAnimated from \"react-select/animated\";\nimport \"font-awesome/css/font-awesome.min.css\";\n\nconst animatedComponents = makeAnimated();\n\nexport default function SelectorMulti(props) {\n  const [options] = useState(props.options);\n  const [code] = useState(props.code);\n  const [text] = useState(props.text);\n  const [elimination] = useState(props.elimination);\n\n  const handleChange = code => variables => {\n    props.callBack(code, variables);\n  };\n\n  const codeRequired = () => {\n    if (elimination === true) {\n      return <div className=\"selectorsHeadLine\">{text} </div>;\n    } else {\n      return (\n        <div className=\"selectorsHeadLine\">\n          {text}{\" \"}\n          <i className=\"fa fa-exclamation-circle\" style={{ color: \"red\" }} />\n        </div>\n      );\n    }\n  };\n\n  const customStyles = {\n    option: (provided, state) => ({\n      ...provided,\n      borderBottom: \"1px dotted #2d4182\",\n      color: state.isSelected ? \"red\" : \"#2d4182\"\n    })\n  };\n  return (\n    <div>\n      {codeRequired(elimination, code)}\n      <Select\n        styles={customStyles}\n        onChange={handleChange(code)}\n        closeMenuOnSelect={false}\n        components={animatedComponents}\n        defaultValue={[options[0]]}\n        isMulti\n        options={options}\n      />\n    </div>\n  );\n}\n","import React from \"react\";\nimport ReactLoading from \"react-loading\";\n\nconst Loading = ({ type, color, height, width }) => (\n  <div\n    style={{\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\"\n    }}\n  >\n    <ReactLoading type={type} color={color} height={height} width={width} />\n  </div>\n);\n\nexport default Loading;\n","import React, { useState, useEffect } from \"react\";\nimport SelectorMulti from \"./SelectorMulti\";\nimport Loading from \"../Loading/Loading\";\n\nlet mainObject = {};\nlet selectorArray = [];\nlet query = [];\n\nconst Selectors = props => {\n  const [postData, setPostData] = useState(null);\n  const [isLoading, setIsLoading] = useState(null);\n\n  const onChangeData = e => {\n    props.onChange(e);\n  };\n\n  useEffect(() => {\n    selectorArray = [];\n    query.length = 0;\n    setIsLoading(true);\n    fetch(props.url)\n      .then(response => {\n        if (!response.ok) {\n          throw new Error(\"Failed to fetch.\");\n        }\n        return response.json();\n      })\n      .then(data => {\n        setIsLoading(false);\n        let table = null;\n        let options = [];\n        let selectorName = [];\n        //----\n\n        table = data.title;\n        selectorArray.push(<div className=\"headLine\">{table}</div>);\n        //----\n        let selectorCounter = 0;\n        for (let i = 0; i < data.variables.length; i++) {\n          let timeBoolean = data.variables[i].time;\n          let elimination = data.variables[i].elimination;\n          let code = data.variables[i].code;\n          let text = data.variables[i].text;\n\n          for (\n            let y = 0;\n            y < data.variables[selectorCounter].values.length;\n            y++\n          ) {\n            options.push({\n              value: data.variables[selectorCounter].values[y],\n              label: data.variables[selectorCounter].valueTexts[y]\n            });\n          }\n          if (timeBoolean === true) {\n            options.reverse();\n          }\n          if (query.length !== data.variables.length) {\n            let value = options[0].value;\n\n            const values = [];\n            values.push(value);\n            const filter = \"item\";\n            const selection = { filter, values };\n            const aa = { code, selection };\n            query.push(aa);\n          }\n          selectorArray.push(\n            <SelectorMulti\n              options={options}\n              selectorName={selectorName}\n              code={code}\n              text={text}\n              elimination={elimination}\n              callBack={handleChange}\n            />\n          );\n          selectorName = [];\n          options = [];\n\n          selectorCounter++;\n        }\n        const response = { px: \"\" };\n        mainObject = { query, response };\n        fetchPostHttp(mainObject);\n      })\n      .catch(err => {\n        console.log(err);\n        setIsLoading(false);\n      });\n  }, [props.url]);\n\n  function handleChange(code, variables) {\n    const values = [];\n    if (variables != null) {\n      for (let i = 0; i < variables.length; i++) {\n        values.push(variables[i].value);\n      }\n    }\n    const filter = \"item\";\n    const selection = { filter, values };\n    const obj = { code, selection };\n\n    var i = query.findIndex(o => o.code === obj.code);\n    if (query[i]) {\n      query[i] = obj;\n    } else {\n      query.push(obj);\n    }\n    const response = { px: \"\" };\n    mainObject = { query, response };\n    fetchPostHttp(mainObject, code);\n  }\n\n  async function fetchPostHttp(obj) {\n    await fetch(props.url, {\n      body: JSON.stringify(obj),\n      method: \"post\"\n    })\n      .then(response => {\n        if (!response.ok) {\n          console.log(\"Failed response\", response);\n          throw new Error(\"POST Failed to fetch.\");\n        }\n        return response.text();\n      })\n      .then(response => {\n        setPostData(response);\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  }\n\n  if (isLoading) {\n    return (\n      <Loading\n        type=\"spinningBubbles\"\n        color=\"#2d4182\"\n        height=\"2%\"\n        width=\"2%\"\n      ></Loading>\n    );\n  }\n  if (selectorArray && postData) {\n    return <div onChange={onChangeData(postData)}>{selectorArray}</div>;\n  }\n  return (\n    <div className=\"noData\">\n      Eingin talva vald\n      <Loading type=\"cylon\" color=\"#2d4182\" height=\"3%\" width=\"3%\"></Loading>\n    </div>\n  );\n};\nexport default Selectors;\n","import React, { Fragment, useEffect, useState } from \"react\";\nimport \"../../styles/style.css\";\nimport Loading from \"../Loading/Loading\";\nimport TreeMenu from \"react-simple-tree-menu\";\n\n//Json file of treeMenu\nimport staticData from \"../../json/menu\";\n\n//CSS from the library\n//import \"../../../node_modules/react-simple-tree-menu/dist/main.css\";\n/*\nChange in library: react-simple-tree-menu\nFiles: walk.d.ts, main.js\n\"key\" to \"id\"\n\"label\" to \"text\"\n*/\n\nconst ListMenu = props => {\n  const [data, setData] = useState(null);\n\n  async function fetchData(url) {\n    const response = await fetch(url);\n    const json = await response.json();\n    return json;\n  }\n  const mainUrl = props.url;\n\n  const fetchDataTree = async url => {\n    //i assume you will handle the fetch with your own method\n    let menuArray = await fetchData(url);\n\n    for (let key in menuArray) {\n      if (menuArray[key].type === \"l\") {\n        menuArray[key].nodes = await fetchDataTree(\n          url + \"/\" + menuArray[key].id\n        );\n      }\n    }\n    return menuArray;\n  };\n\n  async function getDataTree(statBankUrl) {\n    const yourDataTree = await fetchDataTree(statBankUrl);\n    setData(yourDataTree);\n  }\n\n  useEffect(() => {\n    setData(null);\n    console.log(\"useEffect\", props.statBank);\n    getDataTree(props.statBank);\n  }, [props.statBank]);\n\n  const handleClick = e => {\n    if (e.type === \"t\") {\n      const tmpId = e.id;\n      const tmpUrl = props.statBank + tmpId;\n      props.onClickItem(tmpUrl);\n    }\n  };\n  if (data) {\n    return (\n      <Fragment>\n        <div className=\"headLine\">Hagtalsgrunnur</div>\n        <TreeMenu className=\"tree-item\" data={data} onClickItem={handleClick} />\n      </Fragment>\n    );\n  }\n\n  return (\n    <div>\n      <div className=\"noData\">heintar valmynd, vinarliga bíða</div>\n      <Loading type=\"spin\" color=\"#2d4182\" height=\"5%\" width=\"5%\"></Loading>\n    </div>\n  );\n};\n\nexport default ListMenu;\n","import React from \"react\";\n\nexport default function TablesData(props) {\n  if (props.data) {\n    return <div>{props.data}</div>;\n  }\n  return <div className=\"noData\">Einki dáta</div>;\n}\n","import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport DbSelector from \"../DbSelector/DbSelector\";\nimport Selectors from \"../Select/Selectors\";\nimport ListMenu from \"../ListMenu/ListMenu\";\nimport TableData from \"../TablesData/TablesData\";\nimport statBanks from \"../../json/statBanks\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: \"center\",\n    color: theme.palette.text.primary\n  }\n}));\n\nexport default function MainBody() {\n  const [url, setUrl] = useState(\"\");\n  const [data, setData] = useState(\"\");\n  const [statBankUrl, setStatBankUrl] = useState(statBanks[0].value);\n\n  const classes = useStyles();\n\n  const handleChangeUrl = e => {\n    setUrl(e);\n  };\n\n  const handleChangeData = e => {\n    setData(e);\n  };\n\n  const handleChangeStatBank = e => {\n    setStatBankUrl(e.value);\n  };\n\n  return (\n    <div className={classes.root}>\n      <Grid item xs={2}>\n        <div style={{ marginBottom: \"0.5cm\" }} className={classes.paper}>\n          <DbSelector onChange={handleChangeStatBank}></DbSelector>\n        </div>\n      </Grid>\n      <Grid container spacing={2}>\n        <Grid item xs={12} sm={4}>\n          <Paper className={classes.paper}>\n            <Typography component={\"span\"}>\n              <ListMenu onClickItem={handleChangeUrl} statBank={statBankUrl} />\n            </Typography>\n          </Paper>\n        </Grid>\n        <Grid item xs={12} sm={8}>\n          <Paper style={{ marginBottom: \"0.5cm\" }} className={classes.paper}>\n            <Selectors onChange={handleChangeData} url={url} />\n          </Paper>\n          <Paper className={classes.paper}>\n            <TableData data={data} />\n          </Paper>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n","import React from \"react\";\nimport \"../src/styles/style.css\";\nimport Header from \"./components/Layouts/Header\";\nimport MainBody from \"./components/Layouts/MainBody\";\n//import Footer from \"./components/Layouts/Footer\";\nfunction App() {\n\n\n  return (\n    <div >\n      <Header></Header>\n      <MainBody ></MainBody>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}