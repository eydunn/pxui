{"version":3,"sources":["img/logo.svg","components/Layouts/Header.jsx","components/Select/SelectorMulti.jsx","components/Loading/Loading.jsx","components/Select/Selectors.jsx","components/ListMenu/ListMenu.jsx","components/TablesData/TablesData.jsx","components/Layouts/MainBody.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Header","react_default","a","createElement","Grid","container","spacing","item","xs","href","src","Logo","style","height","alignIem","alt","onClick","animatedComponents","makeAnimated","SelectorMulti","props","_useState","useState","options","Object","slicedToArray","_useState3","code","_useState5","text","_useState7","elimination","customStyles","option","provided","state","_objectSpread","borderBottom","color","isSelected","className","react_select_browser_esm","styles","onChange","variables","callBack","handleChange","closeMenuOnSelect","components","defaultValue","isMulti","Loading","_ref","type","width","display","alignItems","justifyContent","react_loading_default","s","query","Selectors","e","_useState2","postData","setPostData","_useState4","isLoading","setIsLoading","values","i","length","push","value","obj","selection","filter","findIndex","o","fetchPostHttp","response","px","_x","_fetchPostHttp","apply","this","arguments","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","console","log","fetch","url","body","JSON","stringify","method","then","ok","Error","catch","err","stop","useEffect","json","data","table","selectorName","title","timeBoolean","time","y","label","valueTexts","reverse","aa","components_Loading_Loading","ListMenu","main_default","onClickItem","tmpUrl","key","TablesData","useStyles","makeStyles","theme","root","flexGrow","paper","padding","textAlign","palette","primary","MainBody","setUrl","setData","classes","sm","Paper","Typography","components_ListMenu_ListMenu","marginBottom","Select_Selectors","App","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.210b7713.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.565f9a19.svg\";","import React from \"react\";\nimport Logo from \"../../img/logo.svg\";\nimport Grid from \"@material-ui/core/Grid\";\n\nexport default function Header() {\n  return (\n    <div>\n      <Grid container spacing={3}>\n        <Grid item xs={12}>\n          <a href=\"http://www.hagstova.fo\">\n            <img\n              src={Logo}\n              style={{ height: \"3em\", alignIem: \"left\" }}\n              alt=\"Hagstovan\"\n              onClick=\"javascript:window.location='https://www.facebook.com/pages/Gr81';\"\n            />\n          </a>\n          <hr />\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport Select from \"react-select\";\nimport makeAnimated from \"react-select/animated\";\nimport \"font-awesome/css/font-awesome.min.css\";\n\nconst animatedComponents = makeAnimated();\n\nexport default function SelectorMulti(props) {\n  const [options] = useState(props.options);\n  const [code] = useState(props.code);\n  const [text] = useState(props.text);\n  const [elimination] = useState(props.elimination);\n\n  const handleChange = code => variables => {\n    props.callBack(code, variables);\n  };\n\n  const codeReq = () => {\n    if (elimination == true) {\n      return <div className=\"selectorsHeadLine\">{text} </div>;\n    } else {\n      return (\n        <div className=\"selectorsHeadLine\">\n          {text}{\" \"}\n          <i className=\"fa fa-exclamation-circle\" style={{ color: \"red\" }} />\n        </div>\n      );\n    }\n  };\n\n  const customStyles = {\n    option: (provided, state) => ({\n      ...provided,\n      borderBottom: \"1px dotted #2d4182\",\n      color: state.isSelected ? \"red\" : \"#2d4182\"\n    })\n  };\n  return (\n    <div>\n      {codeReq(elimination, code)}\n      <Select\n        styles={customStyles}\n        onChange={handleChange(code)}\n        closeMenuOnSelect={false}\n        components={animatedComponents}\n        defaultValue={[options[0]]}\n        isMulti\n        options={options}\n      />\n    </div>\n  );\n}\n","import React from \"react\";\nimport ReactLoading from \"react-loading\";\n\nconst Loading = ({ type, color, height, width }) => (\n  <div\n    style={{\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\"\n    }}\n  >\n    <ReactLoading type={type} color={color} height={height} width={width} />\n  </div>\n);\n\nexport default Loading;\n","import React, { useState, useEffect } from \"react\";\nimport SelectorMulti from \"./SelectorMulti\";\nimport Loading from \"../Loading/Loading\";\n\nlet mainObj = {};\nlet s = [];\nlet query = [];\n\nconst Selectors = props => {\n  const [postData, setPostData] = useState(null);\n  const [isLoading, setIsLoading] = useState(null);\n\n  const wtf = e => {\n    props.onChange(e);\n  };\n\n  useEffect(() => {\n    s = [];\n    query.length = 0;\n    console.log(s.length);\n    setIsLoading(true);\n    fetch(props.url)\n      .then(response => {\n        if (!response.ok) {\n          throw new Error(\"Failed to fetch.\");\n        }\n        return response.json();\n      })\n      .then(data => {\n        setIsLoading(false);\n        let table = null;\n        let options = [];\n        let selectorName = [];\n        //----\n\n        table = data.title;\n        s.push(<div className=\"headLine\">{table}</div>);\n        console.log(s);\n        //----\n        let a = 0;\n        for (let i = 0; i < data.variables.length; i++) {\n          let timeBoolean = data.variables[i].time;\n          let elimination = data.variables[i].elimination;\n          let code = data.variables[i].code;\n          let text = data.variables[i].text;\n\n          for (let y = 0; y < data.variables[a].values.length; y++) {\n            options.push({\n              value: data.variables[a].values[y],\n              label: data.variables[a].valueTexts[y]\n            });\n          }\n          if (timeBoolean === true) {\n            options.reverse();\n          }\n          if (query.length != data.variables.length) {\n            let value = options[0].value;\n\n            const values = [];\n            values.push(value);\n            const filter = \"item\";\n            const selection = { filter, values };\n            const aa = { code, selection };\n            query.push(aa);\n          }\n          s.push(\n            <SelectorMulti\n              options={options}\n              selectorName={selectorName}\n              code={code}\n              text={text}\n              elimination={elimination}\n              callBack={handleChange}\n            />\n          );\n          selectorName = [];\n          options = [];\n\n          a++;\n        }\n        const response = { px: \"\" };\n        mainObj = { query, response };\n        fetchPostHttp(mainObj);\n      })\n      .catch(err => {\n        console.log(err);\n        setIsLoading(false);\n      });\n  }, [props.url]);\n\n  function handleChange(code, variables) {\n    const values = [];\n    if (variables != null) {\n      for (let i = 0; i < variables.length; i++) {\n        values.push(variables[i].value);\n      }\n    }\n    const filter = \"item\";\n    const selection = { filter, values };\n    const obj = { code, selection };\n\n    var i = query.findIndex(o => o.code === obj.code);\n    if (query[i]) {\n      query[i] = obj;\n    } else {\n      query.push(obj);\n    }\n    const response = { px: \"\" };\n    mainObj = { query, response };\n    fetchPostHttp(mainObj, code);\n  }\n\n  async function fetchPostHttp(obj) {\n    console.log(obj);\n    await fetch(props.url, {\n      body: JSON.stringify(obj),\n      method: \"post\"\n    })\n      .then(response => {\n        if (!response.ok) {\n          console.log(\"Failed response\", response);\n          throw new Error(\"POST Failed to fetch.\");\n        }\n        console.log(response);\n\n        return response.text();\n      })\n      .then(response => {\n        console.log(response);\n\n        setPostData(response);\n      })\n      .catch(err => {\n        console.log(err);\n        setPostData(\"Please pick items for the empty selectors\");\n      });\n  }\n\n  if (isLoading) {\n    return (\n      <Loading\n        type=\"spinningBubbles\"\n        color=\"#2d4182\"\n        height=\"2%\"\n        width=\"2%\"\n      ></Loading>\n    );\n  }\n  if (s && postData) {\n    return <div onChange={wtf(postData)}>{s}</div>;\n  }\n  return (\n    <div className=\"noData\">\n      Eingin talva vald\n      <Loading type=\"cylon\" color=\"#2d4182\" height=\"3%\" width=\"3%\"></Loading>\n    </div>\n  );\n};\nexport default Selectors;\n","import React, { useRef, useState, useEffect } from \"react\";\nimport \"../../styles/style.css\";\nimport Loading from \"../Loading/Loading\";\nimport TreeMenu from \"react-simple-tree-menu\";\nimport data from \"../../json/menu\";\n\n//CSS from the library\n//import \"../../../node_modules/react-simple-tree-menu/dist/main.css\";\n\nconst ListMenu = props => {\n  const handleClick = e => {\n    if (e.type === \"t\") {\n      const tmpUrl = \"https://statbank.hagstova.fo/api/v1/fo/H2/\" + e.key;\n      props.onClickItem(tmpUrl);\n    }\n  };\n  if (data) {\n    return (\n      <div>\n        <div className=\"headLine\">Hagtalsgrunnur</div>\n        <div>\n          <TreeMenu\n            className=\"tree-item\"\n            data={data}\n            onClickItem={handleClick}\n          />\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <Loading type=\"cylon\" color=\"#2d4182\" height=\"20%\" width=\"20%\"></Loading>\n  );\n};\n\nexport default ListMenu;\n","import React, { useState, useEffect } from \"react\";\n\nexport default function TablesData(props) {\n  if (props.data) {\n    return <div>{props.data}</div>;\n  }\n  return <div className=\"noData\">Einki dáta</div>;\n}\n","import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport Selectors from \"../Select/Selectors\";\nimport ListMenu from \"../ListMenu/ListMenu\";\nimport TableData from \"../TablesData/TablesData\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: \"center\",\n    color: theme.palette.text.primary\n  }\n}));\n\nexport default function MainBody() {\n  const [url, setUrl] = useState(\"\");\n  const [data, setData] = useState(\"\");\n\n  const classes = useStyles();\n  const handleChange = e => {\n    setUrl(e);\n  };\n\n  const wtf = e => {\n    console.log(e);\n    const tmp = e;\n    setData(tmp);\n  };\n\n  return (\n    <div className={classes.root}>\n      <Grid container spacing={2}>\n        <Grid item xs={12} sm={4}>\n          <Paper className={classes.paper}>\n            <Typography>\n              <ListMenu onClickItem={handleChange} />\n            </Typography>\n          </Paper>\n        </Grid>\n        <Grid item xs={12} sm={8}>\n          <Paper style={{ marginBottom: \"0.5cm\" }} className={classes.paper}>\n            <Selectors onChange={wtf} url={url} />\n          </Paper>\n          <Paper className={classes.paper}>\n            <TableData data={data} />\n          </Paper>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n","import React, { Fragment } from \"react\";\nimport \"../src/styles/style.css\";\nimport Header from \"./components/Layouts/Header\";\nimport Footer from \"./components/Layouts/Footer\";\nimport MainBody from \"./components/Layouts/MainBody\";\nfunction App() {\n\n\n  return (\n    <div >\n      <Header></Header>\n      <MainBody ></MainBody>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}