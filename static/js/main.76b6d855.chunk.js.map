{"version":3,"sources":["img/logo.svg","components/TablesData/px.js","components/Layouts/Header.jsx","components/DbSelector/DbSelector.jsx","components/Select/SelectorMulti.jsx","components/Loading/Loading.jsx","components/Select/Selectors.jsx","components/ListMenu/ListMenu.jsx","components/TablesData/TablesData.jsx","components/Layouts/MainBody.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Px","pxString","this","_ctor","_arrayOfZeroes","l","a","prototype","keyword","k","_","include","keywords","metadata","TABLE","title","keys","variables","flatten","variable","v","vars","indexOf","values","varName","codes","CODES","valCounts","counts","each","e","i","push","size","value","code","idx","val","datum","s","index","len","length","reduce","slice","b","last","arguments","data","replace","dataCol","grpIdx","dataDict","datadict","d","datatable","grpIdxs","el","chgIdx","entries","valIdx","multipliers","dataset","num","di","dl","mi","ml","truncate","range","j","VALUES","filter","m","keepIdxs","pattern","c","w","count","pop","multiple","want","map","indices","start","end","subset","pxSplit","split","pxMetadata","pxData","pxLen","keyOptVal","match","key","vals","opt","HEADING","require","call","Header","react_default","createElement","Grid","container","spacing","item","xs","href","src","Logo","style","height","alignIem","alt","onClick","window","location","animatedComponents","makeAnimated","DbSelector","props","react_select_browser_esm","className","classNamePrefix","onChange","closeMenuOnSelect","components","defaultValue","statBanks","options","SelectorMulti","_useState","useState","Object","slicedToArray","_useState3","_useState5","text","_useState7","elimination","customStyles","option","provided","state","_objectSpread","borderBottom","color","isSelected","styles","callBack","handleChange","isMulti","Loading","_ref","type","width","display","alignItems","justifyContent","react_loading_default","selectorArray","query","Selectors","_useState2","postData","setPostData","_useState4","isLoading","setIsLoading","obj","selection","findIndex","o","fetchPostHttp","response","px","_x","_fetchPostHttp","apply","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","fetch","url","body","JSON","stringify","method","then","ok","console","log","Error","catch","err","stop","useEffect","json","table","selectorName","selectorCounter","timeBoolean","time","y","label","valueTexts","reverse","aa","components_Loading_Loading","ListMenu","setData","fetchData","_fetchData","_callee2","_context2","sent","abrupt","fetchDataTree","menuArray","t0","t1","done","id","nodes","_x2","_getDataTree","_callee3","statBankUrl","yourDataTree","_context3","statBank","_x3","getDataTree","react","main_default","onClickItem","tmpId","tmpUrl","TablesData","contentElement","$","languageISOCode","result","pxFile","tableContainer","heading","headings","Array","isArray","stub","stubs","hasAnyStubs","numberOfColumns","html","headingElements","headingName","headingValues","headingValue","colSpan","_loop","headingElement","descendant","forEach","he","numberOfColumnsInRowAbove","element","rowElements","descendants","stubName","stubValues","stubValue","elements","rowElementsToProcess","dataIndex","rowElement","shift","isLeaf","columnValue","Number","join","append","renderTable","callback","useStyles","makeStyles","theme","root","flexGrow","paper","padding","textAlign","palette","primary","MainBody","setUrl","_useState6","setStatBankUrl","classes","sm","marginBottom","Typography","component","Paper","components_ListMenu_ListMenu","Select_Selectors","fontSize","App","Boolean","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.76b6d855.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.565f9a19.svg\";","/*! px - v0.1.2 - 2013-06-14\n* http://fod.github.com/px.js/\n* Copyright (c) 2013 Fiachra O'Donoghue; Licensed MIT */\n\n(function () {\n    'use strict';\n\n    var root = this;\n\n    var Px = (function () {\n\n        function Px(pxString) {\n            this._ctor(pxString);\n        }\n\n        function _arrayOfZeroes(l) {\n            var a = [];\n            while (l--) {\n                a[l] = 0;\n            }\n            return a;\n        }\n\n        Px.prototype = {\n\n            keyword: function (k) {\n                if (!_.include(this.keywords(), k)) {\n                    throw ('\\'' + k + '\\' is not a valid KEYWORD');\n                }\n\n                if (this.metadata[k].TABLE) {\n                    return this.metadata[k].TABLE;\n                }\n                else {\n                    return this.metadata[k];\n                }\n            },\n\n            title: function () {\n                return this.keyword('TITLE');\n            },\n\n            keywords: function () {\n                return _.keys(this.metadata);\n            },\n\n            variables: function () {\n                return _.flatten([this.keyword('STUB'), this.keyword('HEADING')]);\n            },\n\n            variable: function (v) {\n                var vars = this.variables();\n                if (typeof (v) === 'number') {\n                    return vars[v];\n                }\n                else if (typeof (v) === 'string') {\n                    return _.indexOf(vars, v);\n                }\n                else {\n                    return undefined;\n                }\n            },\n\n            values: function (v) {\n                var varName =\n                    typeof (v) === 'number'\n                        ? this.variable(v)\n                        : this.variables()[this.variable(v)];\n\n                return this.keyword('VALUES')[varName];\n            },\n\n            codes: function (v) {\n                var varName =\n                    typeof (v) === 'number'\n                        ? this.variable(v)\n                        : this.variables()[this.variable(v)];\n\n                if (!this.metadata.CODES || !this.keyword('CODES')[varName]) {\n                    return this.keyword('VALUES')[varName];\n                }\n                else {\n                    return this.keyword('CODES')[varName];\n                }\n            },\n\n            valCounts: function () {\n                var counts = [];\n                _.each(this.variables(), function (e, i) { counts.push(_.size(this.values(i))); }, this);\n                return counts;\n            },\n\n            value: function (code, variable) {\n                var idx = _.indexOf(this.codes(variable), code);\n                return this.values(variable)[idx];\n            },\n\n            code: function (val, variable) {\n                var idx = _.indexOf(this.values(variable), val);\n                return this.codes(variable)[idx];\n            },\n\n            datum: function (s) {\n                // TODO: check for correct array length\n                // TODO: check that each index is in range\n                var counts = this.valCounts();\n\n                var index = 0;\n                for (var i = 0, len = s.length - 1; i < len; i++) {\n                    index += s[i] * (_.reduce(counts.slice(i + 1), function (a, b) { return a * b; }));\n                }\n                index += _.last(s);\n\n                // if true is passed as 2nd arg index rather than value is returned\n                if (arguments[1] === true) {\n                    return index;\n                }\n                else {\n                    return this.data[index].replace(/\"|'/g, '');\n                }\n            },\n\n            dataCol: function (s) {\n                // TODO: check for correct array length (s) and check for 1 and only 1 wildcard\n                var counts = this.valCounts();\n\n                var dataCol = [];\n                var grpIdx = _.indexOf(s, '*');\n                var a = s.slice(0); //copy array so function doesn't alter it\n\n                for (var i = 0; i < counts[grpIdx]; i++) {\n                    a[grpIdx] = i;\n\n                    // if true is passed as 2nd arg indices rather than values are returned\n                    dataCol.push(this.datum(a, arguments[1]));\n                }\n                return dataCol;\n            },\n\n            dataDict: function (s) {\n                // TODO allow code or val to be dict keys via optional 2nd arg\n                var datadict = {},\n                    grpIdx = _.indexOf(s, '*'),\n                    codes = this.codes(grpIdx),\n                    dataCol = this.dataCol(s);\n\n                _.each(dataCol, function (d, i) {\n                    datadict[codes[i]] = d;\n                });\n\n                return datadict;\n            },\n\n\n            datatable: function (s) {\n                // This is fairly useless remove 2-dimension limit\n\n                // TODO: check for correct array length (s) and check for 2 and only 2 wildcard\n                // ALSO: allow either wildcard be the grouping variable (the STUB)\n                var counts = this.valCounts();\n\n                var grpIdxs = [];\n                _.each(s, function (el, i) {\n                    if (el === '*') {\n                        grpIdxs.push(i);\n                    }\n                });\n\n                var grpIdx = grpIdxs[0];\n                var chgIdx = _.last(grpIdxs);\n\n                var datatable = [];\n\n                for (var i = 0; i < counts[chgIdx]; i++) {\n                    s[grpIdx] = '*';\n                    s[chgIdx] = i;\n                    datatable.push(this.dataCol(s, arguments[1]));\n                }\n                return datatable;\n            },\n\n            entries: function () {\n                // TODO -- check for data array size and if too big either (a) split the job, \n                //     (b) throw an exception and suggest a truncate or subset operation first\n\n                // TODO -- allow keys to be code or values via optional argument\n                var counts = this.valCounts(),\n                    vars = this.variables(),\n                    valIdx = _arrayOfZeroes(counts.length),\n                    last = valIdx.length - 1,\n                    multipliers = [],\n                    dataset = [];\n\n                for (var i = 0, l = counts.length; i < l - 1; i++) {\n                    // the multiplier for each variable is the product of the numbers of values \n                    // for each variable occuring after it in the variables array\n                    multipliers[i] = _.reduce(counts.slice(i + 1), function (a, b) { return a * b; });\n                }\n\n                _.each(this.data, function (d, i) {\n\n                    // create datum object and push onto dataset\n                    var datum = { num: d };\n                    for (var di = 0, dl = vars.length; di < dl; di++) {\n                        datum[vars[di]] = this.values(di)[valIdx[di]];\n                    }\n                    dataset.push(datum);\n\n                    // increment indices:\n                    for (var mi = 0, ml = multipliers.length; mi < ml; mi++) {\n                        if ((i + 1) % (multipliers[mi]) === 0) {\n                            valIdx[mi] = valIdx[mi] === counts[mi] - 1 ? 0 : valIdx[mi] + 1;\n                        }\n                    }\n                    valIdx[last] = valIdx[last] === counts[last] - 1 ? 0 : valIdx[last] + 1;\n\n                }, this);\n\n                return dataset;\n            },\n\n            // remove values and associated data from this object\n            truncate: function (s) {\n                //TODO: validate array length\n                //TODO: return unwanted subset as new Px object\n\n                var counts = this.valCounts(),\n                    multipliers = [];\n\n                _.each(s, function (d, i) {\n                    if (d[0] === '*') {\n                        s[i] = _.range(0, counts[i] - 1);\n                    }\n                });\n\n                for (var i = 0, l = counts.length; i < l - 1; i++) {\n                    multipliers[i] = _.reduce(counts.slice(i + 1), function (a, b) { return a * b; });\n                }\n                multipliers.push(1);\n\n                for (var j = 0, k = s.length; j < k; j++) {\n\n                    // drop the values\n                    this.metadata.VALUES[this.variables()[j]] =\n                        _.filter(this.metadata.VALUES[this.variables()[j]], function (e, m) {\n                            return _.indexOf(s[j], m) !== -1;\n                        });\n                }\n\n                var keepIdxs = [];\n                var pattern = function pattern(c, m, w, p) {\n                    if (c.length > 1) {\n                        p = typeof p !== 'undefined' ? p : 1;\n                        var count = c.pop(),\n                            multiple = m.pop(),\n                            want = w.pop();\n\n                        var patt = _.flatten(_.map(_.range(0, count), function (d) {\n                            return _.include(want, d) ? p : _arrayOfZeroes(multiple);\n                        }));\n\n                        pattern(c, m, w, patt);\n                    }\n                    keepIdxs.push(_.flatten(p));\n                };\n                pattern(counts, multipliers, s);\n                keepIdxs = keepIdxs[0];\n\n                var indices = [];\n                _.each(s[0], function (d) {\n                    var start = d * multipliers[0];\n                    var end = start + multipliers[0];\n                    indices.push(_.filter(_.range(start, end), function (d, i) { return keepIdxs[i] === 1; }));\n                });\n                indices = _.flatten(indices);\n                this.data = _.filter(this.data, function (d, i) { return _.indexOf(indices, i) !== -1; });\n            },\n\n            // create a new object from a subset of values in this object\n            subset: function (s) {\n                // TODO\n            },\n\n            _ctor: function (pxString) {\n\n                var metadata = {};\n                var data;\n\n                var pxSplit = pxString.split(/\\nDATA=/);\n\n                var pxMetadata =\n                    pxSplit[0]\n                        .replace(/;\\s*(\\r\\n?|\\n)/g, ';;')\n                        .replace(/;;$/, ';')\n                        .replace(/(\\r\\n?|\\n)/g, '')\n                        .replace(/\"\"/g, ' ')\n                        .split(';;');\n\n                var pxData = pxSplit[1];\n\n                // parse metadata\n                for (var i = 0, pxLen = pxMetadata.length; i < pxLen; i++) {\n\n                    var keyOptVal =\n                        pxMetadata[i]\n                            .match(/^(.+?)(?:\\((.+?)\\))?=(.+)$/);\n\n                    if (!keyOptVal[2]) {\n                        keyOptVal[2] = 'TABLE';\n                    }\n\n                    var key = keyOptVal[1];\n                    var vals = keyOptVal[3].replace(/^\"|\"$/g, '').split(/\",\"/g);\n                    var opt = keyOptVal[2].replace(/\"/g, '');\n\n                    if (!metadata[key]) {\n                        metadata[key] = {};\n                    }\n\n                    if (key !== 'VALUES') { // ensure that a single VALUES option still gets assigned to an array\n                        metadata[key][opt] = vals.length === 1 ? vals[0] : vals;\n                    }\n                    else {\n                        metadata[key][opt] = vals;\n                    }\n\n                }\n\n                // parse data\n                data =\n                    pxData\n                        .replace(/(\\r\\n|\\r|\\n)/g, '')\n                        .replace(/;\\s*/, '')\n                        .split(/\\s+/);\n\n                // Fix for bad files with no HEADING\n                if (!metadata.HEADING) {\n                    metadata.HEADING = { TABLE: [] };\n                }\n\n                // Assign instance data\n                this.metadata = metadata;\n                this.data = data;\n            }\n\n        };\n\n        return Px;\n\n    }());\n\n    var _ = root._;\n    if (typeof exports !== 'undefined') {\n        if (typeof module !== 'undefined' && module.exports) {\n            exports = module.exports = Px;\n        }\n        exports.Px = Px;\n        _ = require('underscore');\n    } else {\n        root.Px = Px;\n    }\n\n}.call(this));\n","import React from \"react\";\nimport Logo from \"../../img/logo.svg\";\nimport Grid from \"@material-ui/core/Grid\";\n\nexport default function Header() {\n  const redirectToUrl = () => {\n    window.location.href = \"https://www.google.com\";\n  };\n\n  return (\n    <div>\n      <Grid container spacing={3}>\n        <Grid item xs={12}>\n          <a href=\"http://www.hagstova.fo\">\n            <img\n              src={Logo}\n              style={{ height: \"3em\", alignIem: \"left\" }}\n              alt=\"Hagstovan\"\n              onClick={redirectToUrl}\n            />\n          </a>\n          <hr />\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n","import React from \"react\";\nimport Select from \"react-select\";\nimport makeAnimated from \"react-select/animated\";\nimport \"font-awesome/css/font-awesome.min.css\";\n\nimport statBanks from \"../../json/statBanks\";\nconst animatedComponents = makeAnimated();\n\nexport default function DbSelector(props) {\n  const handleChange = e => {\n    props.onChange(e);\n  };\n\n  return (\n    <Select\n      className=\"basic-single\"\n      classNamePrefix=\"select\"\n      onChange={handleChange}\n      closeMenuOnSelect={true}\n      components={animatedComponents}\n      defaultValue={[statBanks[0]]}\n      options={statBanks}\n    />\n  );\n}\n","import React, { useState } from \"react\";\nimport Select from \"react-select\";\nimport makeAnimated from \"react-select/animated\";\nimport \"font-awesome/css/font-awesome.min.css\";\n\nconst animatedComponents = makeAnimated();\n\nexport default function SelectorMulti(props) {\n  const [options] = useState(props.options);\n  const [code] = useState(props.code);\n  const [text] = useState(props.text);\n  const [elimination] = useState(props.elimination);\n\n  const handleChange = code => variables => {\n    props.callBack(code, variables);\n  };\n\n  const codeRequired = () => {\n    if (elimination === true) {\n      return <div className=\"selectorsHeadLine\">{text} </div>;\n    } else {\n      return (\n        <div className=\"selectorsHeadLine\">\n          {text}{\" \"}\n          <i className=\"fa fa-exclamation-circle\" style={{ color: \"red\" }} />\n        </div>\n      );\n    }\n  };\n\n  const customStyles = {\n    option: (provided, state) => ({\n      ...provided,\n      borderBottom: \"1px dotted #2d4182\",\n      color: state.isSelected ? \"red\" : \"#2d4182\"\n    })\n  };\n  return (\n    <div>\n      {codeRequired(elimination, code)}\n      <Select\n        styles={customStyles}\n        onChange={handleChange(code)}\n        closeMenuOnSelect={false}\n        components={animatedComponents}\n        defaultValue={[options[0]]}\n        isMulti\n        options={options}\n      />\n    </div>\n  );\n}\n","import React from \"react\";\nimport ReactLoading from \"react-loading\";\n\n//indeterminate progress bar\nconst Loading = ({ type, color, height, width }) => (\n  <div\n    style={{\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\"\n    }}\n  >\n    <ReactLoading type={type} color={color} height={height} width={width} />\n  </div>\n);\n\nexport default Loading;\n","import React, { useState, useEffect } from \"react\";\nimport SelectorMulti from \"./SelectorMulti\";\nimport Loading from \"../Loading/Loading\";\n\nlet mainObject = {};\nlet selectorArray = [];\nlet query = [];\n\nconst Selectors = props => {\n  const [postData, setPostData] = useState(null);\n  const [isLoading, setIsLoading] = useState(null);\n\n  const onChangeData = e => {\n    props.onChange(e);\n  };\n\n  useEffect(() => {\n    selectorArray = [];\n    query.length = 0;\n    setIsLoading(true);\n    fetch(props.url)\n      .then(response => {\n        if (!response.ok) {\n          throw new Error(\"Failed to fetch.\");\n        }\n        return response.json();\n      })\n      .then(data => {\n        setIsLoading(false);\n        let table = null;\n        let options = [];\n        let selectorName = [];\n        //----\n\n        table = data.title;\n        selectorArray.push(<div className=\"headLine\">{table}</div>);\n        //----\n        let selectorCounter = 0;\n        for (let i = 0; i < data.variables.length; i++) {\n          let timeBoolean = data.variables[i].time;\n          let elimination = data.variables[i].elimination;\n          let code = data.variables[i].code;\n          let text = data.variables[i].text;\n\n          for (\n            let y = 0;\n            y < data.variables[selectorCounter].values.length;\n            y++\n          ) {\n            options.push({\n              value: data.variables[selectorCounter].values[y],\n              label: data.variables[selectorCounter].valueTexts[y]\n            });\n          }\n          if (timeBoolean === true) {\n            options.reverse();\n          }\n          if (query.length !== data.variables.length) {\n            let value = options[0].value;\n\n            const values = [];\n            values.push(value);\n            const filter = \"item\";\n            const selection = { filter, values };\n            const aa = { code, selection };\n            query.push(aa);\n          }\n          selectorArray.push(\n            <SelectorMulti\n              options={options}\n              selectorName={selectorName}\n              code={code}\n              text={text}\n              elimination={elimination}\n              callBack={handleChange}\n            />\n          );\n          selectorName = [];\n          options = [];\n\n          selectorCounter++;\n        }\n        const response = { px: \"\" };\n        mainObject = { query, response };\n        fetchPostHttp(mainObject);\n      })\n      .catch(err => {\n        console.log(err);\n        setIsLoading(false);\n      });\n  }, [props.url]);\n\n  function handleChange(code, variables) {\n    const values = [];\n    if (variables != null) {\n      for (let i = 0; i < variables.length; i++) {\n        values.push(variables[i].value);\n      }\n    }\n    const filter = \"item\";\n    const selection = { filter, values };\n    const obj = { code, selection };\n\n    var i = query.findIndex(o => o.code === obj.code);\n    if (query[i]) {\n      query[i] = obj;\n    } else {\n      query.push(obj);\n    }\n    const response = { px: \"\" };\n    mainObject = { query, response };\n    fetchPostHttp(mainObject, code);\n  }\n\n  async function fetchPostHttp(obj) {\n    await fetch(props.url, {\n      body: JSON.stringify(obj),\n      method: \"post\"\n    })\n      .then(response => {\n        if (!response.ok) {\n          console.log(\"Failed response\", response);\n          throw new Error(\"POST Failed to fetch.\");\n        }\n        return response.text();\n      })\n      .then(response => {\n        setPostData(response);\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  }\n\n  if (isLoading) {\n    return (\n      <Loading\n        type=\"spinningBubbles\"\n        color=\"#2d4182\"\n        height=\"2%\"\n        width=\"2%\"\n      ></Loading>\n    );\n  }\n  if (selectorArray && postData) {\n    return <div onChange={onChangeData(postData)}>{selectorArray}</div>;\n  }\n  return (\n    <div className=\"noData\">\n      Eingin talva vald\n      <Loading type=\"cylon\" color=\"#2d4182\" height=\"3%\" width=\"3%\"></Loading>\n    </div>\n  );\n};\nexport default Selectors;\n","import React, { Fragment, useEffect, useState } from \"react\";\nimport \"../../styles/style.css\";\nimport Loading from \"../Loading/Loading\";\nimport TreeMenu from \"react-simple-tree-menu\";\n\n//Json file of treeMenu\n//import staticData from \"../../json/menu\";\n\n//CSS from the library\n//import \"../../../node_modules/react-simple-tree-menu/dist/main.css\";\n/*\nChange in library: react-simple-tree-menu\nFiles: walk.d.ts, main.js\n\"key\" to \"id\"\n\"label\" to \"text\"\n*/\n\nconst ListMenu = props => {\n  const [data, setData] = useState(null);\n\n  async function fetchData(url) {\n    const response = await fetch(url);\n    const json = await response.json();\n    return json;\n  }\n\n  const fetchDataTree = async url => {\n    //i assume you will handle the fetch with your own method\n    let menuArray = await fetchData(url);\n\n    for (let key in menuArray) {\n      if (menuArray[key].type === \"l\") {\n        menuArray[key].nodes = await fetchDataTree(\n          url + \"/\" + menuArray[key].id\n        );\n      }\n    }\n    return menuArray;\n  };\n\n  async function getDataTree(statBankUrl) {\n    const yourDataTree = await fetchDataTree(statBankUrl);\n    setData(yourDataTree);\n  }\n\n  useEffect(() => {\n    setData(null);\n    console.log(\"useEffect\", props.statBank);\n    getDataTree(props.statBank);\n  }, [props.statBank]);\n\n  const handleClick = e => {\n    if (e.type === \"t\") {\n      const tmpId = e.id;\n      const tmpUrl = props.statBank + tmpId;\n      props.onClickItem(tmpUrl);\n    }\n  };\n  if (data) {\n    return (\n      <Fragment>\n        <div className=\"headLine\">Hagtalsgrunnur</div>\n        <TreeMenu className=\"tree-item\" data={data} onClickItem={handleClick} />\n      </Fragment>\n    );\n  }\n\n  return (\n    <div>\n      {/* <TreeMenu\n        className=\"tree-item\"\n        data={staticData}\n        onClickItem={handleClick}\n      /> */}\n      <div className=\"noData\">heintar valmynd, vinarliga bíða</div>\n      <Loading type=\"spin\" color=\"#2d4182\" height=\"5%\" width=\"5%\"></Loading>\n    </div>\n  );\n};\n\nexport default ListMenu;\n","import React, { useState } from \"react\";\nimport Px from \"./px\";\nimport $ from \"jquery\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Loading from \"../Loading/Loading\";\n\nexport default function TablesData(props) {\n  let contentElement = $(\"#tableResult\");\n  let languageISOCode = \"fo\";\n\n  function renderTable(pxFile, tableContainer) {\n    console.log(pxFile);\n    //Check if pxFile has data and metadata and report error\n    if (!pxFile[\"data\"] || !pxFile[\"metadata\"]) {\n      tableContainer.append(\"<h2>Kann ikki vísa. Onki 'úrslit' funni</h2>\");\n      return;\n    }\n\n    // ------------------------------------------------------------------------------- //\n    //                                    Read data                                    //\n    // ------------------------------------------------------------------------------- //\n    let data = pxFile[\"data\"];\n    let metadata = pxFile[\"metadata\"];\n\n    //Check if any decimals are in the data set by checking the first value\n    let hasAnyDecimals = false;\n    if (data.length > 0) {\n      hasAnyDecimals = data[0] % 1 !== 0;\n    }\n\n    //Load headings (by culture if available)\n    let heading = metadata[\"HEADING[\" + languageISOCode + \"]\"];\n    if (!heading) heading = metadata[\"HEADING\"];\n\n    //Load headings from TABLE in HEADING\n    let headings = heading[\"TABLE\"];\n    if (!Array.isArray(headings)) {\n      headings = [headings]; //Force to array\n    }\n\n    //Read values (by culture if available)\n    let values = metadata[\"VALUES[\" + languageISOCode + \"]\"];\n    if (!values) values = metadata[\"VALUES\"];\n\n    //Read Stub (by culture if available)\n    let stub = metadata[\"STUB[\" + languageISOCode + \"]\"];\n    if (!heading) stub = metadata[\"STUB\"];\n\n    let stubs = stub[\"TABLE\"];\n    if (!Array.isArray(stubs)) {\n      stubs = [stubs]; //Force to array\n    }\n\n    let hasAnyStubs = stubs !== null;\n\n    //Read number of columns\n    let numberOfColumns = 0;\n    if (data && data.length > 0) numberOfColumns = 1;\n\n    // ------------------------------------------------------------------------------- //\n    //                                  Start render                                   //\n    // ------------------------------------------------------------------------------- //\n\n    let html = [];\n\n    html.push(\n      \"<table class='pxtable table table-striped table-responsive'><colgroup><col width='100%'/></colgroup>\"\n    );\n\n    // ------------------------------------------------------------------------------- //\n    //                                     HEADING                                     //\n    // ------------------------------------------------------------------------------- //\n    if (headings && headings.length > 0) {\n      html.push(\"<thead>\");\n\n      //Create heading elements\n      let headingElements = [];\n      for (let i = 0; i < headings.length; i++) {\n        if (!headingElements[i]) headingElements[i] = [];\n\n        let headingName = headings[i];\n        let headingValues = values[headingName];\n\n        if (!Array.isArray(headingValues)) {\n          headingValues = [headingValues];\n        }\n\n        for (let j = 0; j < headingValues.length; j++) {\n          headingElements[i].push({\n            headingName: headingName,\n            headingValue: headingValues[j],\n            colSpan: 1\n          });\n        }\n      }\n\n      //Calculate Col Span\n      for (let i = headingElements.length - 2; i > -1; i--) {\n        let headingElement = headingElements[i];\n        let descendant = headingElements[i + 1];\n        let colSpan = descendant[0].colSpan * descendant.length;\n        headingElement.forEach(he => {\n          he.colSpan = colSpan;\n        });\n      }\n\n      //Render heading elements\n      let numberOfColumnsInRowAbove = 1;\n      for (let i = 0; i < headingElements.length; i++) {\n        html.push(\"<tr>\");\n\n        if (hasAnyStubs) {\n          html.push(\"<th></th>\"); //add the empty column\n        }\n\n        let headingElement = headingElements[i];\n        let headingValue = \"\";\n        for (\n          let j = 0;\n          j < headingElement.length * numberOfColumnsInRowAbove;\n          j++\n        ) {\n          let element = headingElement[j % headingElement.length];\n          headingValue = \"<th \";\n          if (element.colSpan > 1) {\n            headingValue += \"colSpan='\" + element.colSpan + \"'\";\n          }\n          headingValue += \">\" + element.headingValue + \"</th>\";\n          html.push(headingValue);\n        }\n\n        html.push(\"</tr>\");\n        numberOfColumnsInRowAbove =\n          headingElement.length * numberOfColumnsInRowAbove;\n\n        //Rebalance number of columns\n        if (numberOfColumns < numberOfColumnsInRowAbove)\n          numberOfColumns = numberOfColumnsInRowAbove;\n      }\n\n      html.push(\"</thead>\");\n    }\n\n    // ------------------------------------------------------------------------------- //\n    //                                      ROWS                                       //\n    // ------------------------------------------------------------------------------- //\n    let rowElements = [];\n\n    html.push(\"<tbody>\");\n    if (hasAnyStubs) {\n      for (let i = stubs.length - 1; i > -1; i--) {\n        //Create an empty descendants list\n        let descendants = [];\n\n        //Check if any row elements already exist\n        if (rowElements.length > 0) {\n          //Copy row elements to descendants\n          descendants = rowElements.slice(0);\n\n          //Clear rowElements\n          rowElements = [];\n        }\n\n        let stubName = stubs[i];\n        let stubValues = values[stubName];\n        if (!Array.isArray(stubValues)) {\n          stubValues = [stubValues];\n        }\n\n        for (let j = 0; j < stubValues.length; j++) {\n          rowElements.push({\n            stubName: stubName,\n            stubValue: stubValues[j],\n            elements: descendants.slice(0)\n          });\n        }\n      }\n\n      let rowElementsToProcess = rowElements.slice(0);\n      let dataIndex = 0;\n      while (rowElementsToProcess.length > 0) {\n        let rowElement = rowElementsToProcess.shift();\n        let isLeaf = rowElement.elements.length == 0;\n\n        html.push(\"<tr>\");\n        html.push(\"<td>\" + rowElement.stubValue + \"</td>\");\n\n        for (let k = 0; k < numberOfColumns; k++) {\n          let columnValue = \"\";\n          //only read values if is a leaf\n          if (isLeaf) {\n            columnValue = data[k + numberOfColumns * dataIndex];\n\n            if (columnValue === '\"-\"') {\n              columnValue = \"-\";\n            } else {\n              if (hasAnyDecimals) columnValue = Number(columnValue);\n              else columnValue = Number(columnValue);\n            }\n          }\n\n          html.push(\"<td>\" + columnValue + \"</td>\");\n        }\n\n        //Add childre if not leaf\n        if (!isLeaf) {\n          rowElement.elements.forEach(e => {\n            rowElementsToProcess.push(e);\n          });\n        }\n\n        html.push(\"</tr>\");\n\n        //Increment data index if not leaf\n        if (isLeaf) {\n          dataIndex++;\n        }\n      }\n    } else {\n      for (let k = 0; k < numberOfColumns; k++) {\n        let columnValue = data[k];\n        html.push(\"<td>\" + columnValue + \"</td>\");\n      }\n    }\n\n    html.push(\"</tbody>\");\n    html.push(\"</table>\");\n\n    tableContainer.html(html.join(\"\"));\n  }\n\n  function loadPxFile(address, callback) {\n    return callback(new Px(props.data));\n  }\n\n  if (props.data) {\n    return (\n      <div>\n        {loadPxFile(\n          \"http://statbank.hagstova.fo/sq/74e7ed93-db6c-4bb8-99e3-8170a6f9a30a\",\n          function(result) {\n            renderTable(result, contentElement);\n          }\n        )}\n      </div>\n    );\n  }\n  return (\n    <div className=\"noData\">\n      Einki dáta\n      <Loading type=\"cylon\" color=\"#2d4182\" height=\"3%\" width=\"3%\"></Loading>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport DbSelector from \"../DbSelector/DbSelector\";\nimport Selectors from \"../Select/Selectors\";\nimport ListMenu from \"../ListMenu/ListMenu\";\nimport TableData from \"../TablesData/TablesData\";\nimport statBanks from \"../../json/statBanks\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: \"center\",\n    color: theme.palette.text.primary\n  }\n}));\n\nexport default function MainBody() {\n  const [url, setUrl] = useState(\"\");\n  const [data, setData] = useState(\"\");\n  const [statBankUrl, setStatBankUrl] = useState(statBanks[0].value);\n\n  const classes = useStyles();\n\n  const handleChangeUrl = e => {\n    setUrl(e);\n  };\n\n  const handleChangeData = e => {\n    setData(e);\n  };\n\n  const handleChangeStatBank = e => {\n    setStatBankUrl(e.value);\n  };\n\n  return (\n    <div className={classes.root}>\n      <Grid item xs={12} sm={3}>\n        <div style={{ marginBottom: \"0.5cm\" }} className={classes.paper}>\n          <Typography component={\"span\"}>\n            <DbSelector onChange={handleChangeStatBank}>s</DbSelector>\n          </Typography>\n        </div>\n      </Grid>\n      <Grid container spacing={2}>\n        <Grid item xs={12} sm={4}>\n          <Paper className={classes.paper}>\n            <ListMenu onClickItem={handleChangeUrl} statBank={statBankUrl} />\n          </Paper>\n        </Grid>\n        <Grid item xs={12} sm={8}>\n          <Paper style={{ marginBottom: \"0.5cm\" }} className={classes.paper}>\n            <Selectors onChange={handleChangeData} url={url} />\n          </Paper>\n          <Paper className={classes.paper}>\n            <Typography component={\"span\"}>\n              <TableData data={data}></TableData>\n              <div style={{ fontSize: \"1vw\" }} id=\"tableResult\"></div>\n            </Typography>\n          </Paper>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n","import React from \"react\";\nimport \"../src/styles/style.css\";\nimport Header from \"./components/Layouts/Header\";\nimport MainBody from \"./components/Layouts/MainBody\";\n//import Footer from \"./components/Layouts/Footer\";\n\n\nfunction App() {\n\n\n  return (\n    <div >\n      <Header></Header>\n      <MainBody ></MainBody>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}